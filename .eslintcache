[{"/home/florent/VisualStudioCode/app-niortweb/src/App.tsx":"1","/home/florent/VisualStudioCode/app-niortweb/src/shared/private-route/index.tsx":"2","/home/florent/VisualStudioCode/app-niortweb/src/models/notif.ts":"3","/home/florent/VisualStudioCode/app-niortweb/src/confs/index.ts":"4","/home/florent/VisualStudioCode/app-niortweb/src/shared/snack-add/index.tsx":"5","/home/florent/VisualStudioCode/app-niortweb/src/services/pwa.service.ts":"6","/home/florent/VisualStudioCode/app-niortweb/src/views/login/index.tsx":"7","/home/florent/VisualStudioCode/app-niortweb/src/stores/notif.ts":"8","/home/florent/VisualStudioCode/app-niortweb/src/services/http-client.service.ts":"9","/home/florent/VisualStudioCode/app-niortweb/src/shared/menu-app/index.tsx":"10","/home/florent/VisualStudioCode/app-niortweb/src/views/welcome/index.tsx":"11","/home/florent/VisualStudioCode/app-niortweb/src/reportWebVitals.ts":"12","/home/florent/VisualStudioCode/app-niortweb/src/services/auth.service.ts":"13","/home/florent/VisualStudioCode/app-niortweb/src/stubs/firebase.ts":"14","/home/florent/VisualStudioCode/app-niortweb/src/stores/my-profil.ts":"15","/home/florent/VisualStudioCode/app-niortweb/src/services/history.service.ts":"16","/home/florent/VisualStudioCode/app-niortweb/src/views/error/index.tsx":"17","/home/florent/VisualStudioCode/app-niortweb/src/services/fcm.service.ts":"18","/home/florent/VisualStudioCode/app-niortweb/src/models/EventFormatEnum.ts":"19","/home/florent/VisualStudioCode/app-niortweb/src/models/TagEnum.ts":"20","/home/florent/VisualStudioCode/app-niortweb/src/models/StateEnum.ts":"21","/home/florent/VisualStudioCode/app-niortweb/src/models/EventModeEnum.ts":"22","/home/florent/VisualStudioCode/app-niortweb/src/views/register/index.tsx":"23","/home/florent/VisualStudioCode/app-niortweb/src/services/event.service.ts":"24","/home/florent/VisualStudioCode/app-niortweb/src/shared/event-card/index.tsx":"25","/home/florent/VisualStudioCode/app-niortweb/src/shared/review/index.tsx":"26","/home/florent/VisualStudioCode/app-niortweb/src/index.tsx":"27","/home/florent/VisualStudioCode/app-niortweb/src/views/no-match/index.tsx":"28","/home/florent/VisualStudioCode/app-niortweb/src/shared/youtube-live/index.tsx":"29","/home/florent/VisualStudioCode/app-niortweb/src/stores/event.ts":"30","/home/florent/VisualStudioCode/app-niortweb/src/views/email-check/index.tsx":"31"},{"size":2961,"mtime":1616502819478,"results":"32","hashOfConfig":"33"},{"size":957,"mtime":1616145531067,"results":"34","hashOfConfig":"33"},{"size":122,"mtime":1606986087305,"results":"35","hashOfConfig":"33"},{"size":1300,"mtime":1617968188399,"results":"36","hashOfConfig":"33"},{"size":1677,"mtime":1606985931102,"results":"37","hashOfConfig":"33"},{"size":2415,"mtime":1618057671582,"results":"38","hashOfConfig":"33"},{"size":5277,"mtime":1616449579773,"results":"39","hashOfConfig":"33"},{"size":406,"mtime":1587839601901,"results":"40","hashOfConfig":"33"},{"size":1451,"mtime":1606741697258,"results":"41","hashOfConfig":"33"},{"size":8846,"mtime":1618063176634,"results":"42","hashOfConfig":"33"},{"size":6748,"mtime":1618057066007,"results":"43","hashOfConfig":"33"},{"size":425,"mtime":1606719130982,"results":"44","hashOfConfig":"33"},{"size":2293,"mtime":1618059037743,"results":"45","hashOfConfig":"33"},{"size":3334,"mtime":1607254109879,"results":"46","hashOfConfig":"33"},{"size":1150,"mtime":1607078001919,"results":"47","hashOfConfig":"33"},{"size":1087,"mtime":1592639423777,"results":"48","hashOfConfig":"33"},{"size":843,"mtime":1615729544378,"results":"49","hashOfConfig":"33"},{"size":3078,"mtime":1618058419523,"results":"50","hashOfConfig":"33"},{"size":52,"mtime":1615550794792,"results":"51","hashOfConfig":"33"},{"size":51,"mtime":1615550758969,"results":"52","hashOfConfig":"33"},{"size":55,"mtime":1615552109513,"results":"53","hashOfConfig":"33"},{"size":165,"mtime":1615550789828,"results":"54","hashOfConfig":"33"},{"size":5933,"mtime":1618055832690,"results":"55","hashOfConfig":"33"},{"size":443,"mtime":1615628473393,"results":"56","hashOfConfig":"33"},{"size":7829,"mtime":1618062320845,"results":"57","hashOfConfig":"33"},{"size":4595,"mtime":1616451149558,"results":"58","hashOfConfig":"33"},{"size":500,"mtime":1606719130982,"results":"59","hashOfConfig":"33"},{"size":632,"mtime":1606734170216,"results":"60","hashOfConfig":"33"},{"size":1652,"mtime":1615998823939,"results":"61","hashOfConfig":"33"},{"size":1481,"mtime":1615548247872,"results":"62","hashOfConfig":"33"},{"size":2434,"mtime":1609422216744,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"billru",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"69"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"83","usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"69"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"84"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"78"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"66"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"84"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/florent/VisualStudioCode/app-niortweb/src/App.tsx",[],["141","142"],"/home/florent/VisualStudioCode/app-niortweb/src/shared/private-route/index.tsx",[],["143","144"],"/home/florent/VisualStudioCode/app-niortweb/src/models/notif.ts",[],["145","146"],"/home/florent/VisualStudioCode/app-niortweb/src/confs/index.ts",["147"],"\nimport { Configuration } from \"./configuration\";\n\n\n//const DEV_API_BASEURL = 'http://localhost:5001/mykraken-f63e7/us-central1/api/api';\n//const DEV_API_BASEURL = '/api-mock';\nconst DEV_API_BASEURL = 'http://localhost:5001/niortweb/us-central1/api/api';\nconst other: Configuration = {\n    support: '',\n    baseURL: 'http://localhost:4000',\n    soutenir: 'https://www.paypal.me/ffremont',\n    email:\"ff.fremont.florent@gmail.com\",\n    fcmPublicVapidKey: 'BDorbRGlAAfrBhhye1o3dWSUCiIYOMpNoBtibMkd1gRFKRE7O5nW7K1AWIO3okeyZXO7vQfkeUslRITFY3rxZvs',\n    API: {\n        events: (id:any = '') => `${DEV_API_BASEURL}/events${id ? '/'+id: ''}`,\n        myProfil: () => `${DEV_API_BASEURL}/my-profil`\n    },\n    slack:''\n} ;\n\nconst API_BASEURL = '/api';\nconst prod: Configuration = {\n    support: '',\n    baseURL: 'https://app.niortweb.fr',\n    email:\"ff.fremont.florent@gmail.com\",\n    soutenir: 'https://www.paypal.me/ffremont',\n    fcmPublicVapidKey: 'BDorbRGlAAfrBhhye1o3dWSUCiIYOMpNoBtibMkd1gRFKRE7O5nW7K1AWIO3okeyZXO7vQfkeUslRITFY3rxZvs',\n    API: {\n        events: (id:any = '') => `${API_BASEURL}/events${id ? '/'+id: ''}`,\n        myProfil: () => `${API_BASEURL}/my-profil`\n    },\n    slack:''\n} ;\n\nconst config = process.env.REACT_APP_STAGE === 'prod'  ? prod : other;\n\n  export default { ...config};","/home/florent/VisualStudioCode/app-niortweb/src/shared/snack-add/index.tsx",[],["148","149"],"/home/florent/VisualStudioCode/app-niortweb/src/services/pwa.service.ts",[],"/home/florent/VisualStudioCode/app-niortweb/src/views/login/index.tsx",["150","151"],"import React from 'react';\nimport './Login.scss';\nimport {\n  Redirect\n} from 'react-router-dom';\nimport Avatar from '@material-ui/core/Avatar';\nimport AppIcon from '../../assets/images/logo512.png';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport GoogleIcon from '../../assets/images/google.svg';\nimport MailIcon from '../../assets/images/mail.svg';\nimport authService from '../../services/auth.service';\nimport {FirebaseStub} from '../../stubs/firebase';\nimport historyService from '../../services/history.service';\n\nif(process.env.REACT_APP_STAGE !== 'prod'){\n  (window as any).firebase = (new FirebaseStub()).init();\n}\n\nclass Login extends React.Component<{history:any,location:any}, {loading:boolean, isSignedIn:boolean, from:string}> {\n  unregisterAuthObserver: any = null;\n\n  // The component's Local state.\n  state = {\n    loading: true, // waiting onAuthStateChanged\n    isSignedIn: false, // Local signed-in state.\n    from: '/'\n  };\n\n  private sign(provider:any){\n    provider.addScope('profile');\n    provider.addScope('email');\n    (window as any).firebase.auth().signInWithRedirect(provider);\n  }\n\n  signEmail(){\n    const f = (window as any).firebase;\n\n    if(f){\n      const email:any = window.prompt('Merci de saisir votre email ');\n\n      f.auth().sendSignInLinkToEmail(email, {\n        url: window.location.origin,\n        handleCodeInApp: true,\n      })\n      .then(function() {\n        window.localStorage.setItem('emailForSignIn', email);\n        alert('Un message vous a été envoyé (attention aux tries automatiques : notifications, promotions, spam...)');\n      })\n    }\n  }\n\n  signGoogle(){\n    const provider:any = process.env.REACT_APP_STAGE === 'prod' ?  new (window as any).firebase.auth.GoogleAuthProvider() : new ((window as any).firebase.auth.GoogleAuthProvider());\n    this.sign(provider);    \n  }\n\n  componentDidMount() {\n    historyService.on(window.location.pathname);\n    this.registerOnFirebase();\n\n    if(this.props.location){\n      if(this.props.location.state){\n        this.setState({from: this.props.location.state.fromPathname});\n      }else{\n        this.setState({from: '/evenements'});\n      }      \n    }\n  }\n\n  private registerOnFirebase(){\n    this.unregisterAuthObserver = (window as any).firebase.auth().onAuthStateChanged(\n      (user:any) => {\n        if(user){\n          const promises = [(window as any).firebase.auth().currentUser.getIdToken().then((token:string) => {\n            authService.setIdToken(token)\n            return token;\n          })];\n          promises.push(authService.authenticate({email: user.email}));\n          \n          Promise.all(promises)\n          .then((results) => {\n            const user = results[1];\n            //let from = '/tickets';\n            this.setState({ loading: false, isSignedIn: true, from: this.state.from });\n          }).catch((e) => {\n            this.setState({ loading: false, isSignedIn: false, from:'/error' });\n\n          });\n        }else{\n          // no authenticated, noop show buttons\n          this.setState({ loading: false, isSignedIn: false });\n        }        \n      }\n    );\n  }\n\n  // Make sure we un-register Firebase observers when the component unmounts.\n  componentWillUnmount() {\n    if(this.unregisterAuthObserver){\n      this.unregisterAuthObserver();\n    }\n  }\n\n  render() {\n    if(this.state.loading){\n      return <div\n      style={{\n          position: 'absolute', \n          left: '50%', \n          top: '50%',\n          transform: 'translate(-50%, -50%)'\n      }}\n  ><CircularProgress className=\"wait-auth\" /></div>;\n    }else{\n      if (this.state.isSignedIn) {\n        return <Redirect\n          to={{\n            pathname: this.state.from,\n            state: { from: '/login' }\n          }}\n        />;\n      } else {\n        return <div className=\"login\">\n          <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className=\"paper\">\n              <Avatar className=\"avatar\" src={AppIcon}>\n               \n              </Avatar>\n              <Typography component=\"h1\" variant=\"h5\">\n                Connexion\n          </Typography>\n              \n              <Button\n                type=\"button\"\n                fullWidth\n                size=\"large\"\n                variant=\"contained\"\n                color=\"default\"\n                onClick={() => this.signGoogle()}\n                className=\"provider google\"\n              >\n                <img alt=\"google\" src={GoogleIcon} /> Connexion par Google\n            </Button>\n            <Button\n                type=\"button\"\n                fullWidth\n                disabled={false}\n                color=\"primary\"\n                size=\"large\"\n                onClick={() => this.signEmail()}\n                variant=\"contained\"\n                className=\"provider email\"\n              >\n                <img alt=\"mail\" src={MailIcon} /> Connexion par email\n            </Button>\n            </div>\n          </Container>\n  \n        </div>;\n      }\n    }\n\n    \n    \n  }\n}\n\n\nexport default Login;\n",["152","153"],"/home/florent/VisualStudioCode/app-niortweb/src/stores/notif.ts",[],["154","155"],"/home/florent/VisualStudioCode/app-niortweb/src/services/http-client.service.ts",[],"/home/florent/VisualStudioCode/app-niortweb/src/shared/menu-app/index.tsx",["156","157","158"],"/home/florent/VisualStudioCode/app-niortweb/src/views/welcome/index.tsx",["159","160"],"import React from 'react';\nimport './Welcome.scss';\nimport MenuApp from '../../shared/menu-app';\nimport historyService from '../../services/history.service';\nimport { Avatar, Backdrop, Button, CardActions, CardHeader, Chip, CircularProgress } from '@material-ui/core';\nimport SnackAdd from '../../shared/snack-add';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport IconButton from '@material-ui/core/IconButton';\nimport Collapse from '@material-ui/core/Collapse';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport AppIcon from '../../assets/images/banner-logo.png';\nimport * as My from '../../models/Event';\nimport eventStore, {EventStore} from '../../stores/event';\nimport eventService from '../../services/event.service';\nimport authService from '../../services/auth.service';\nimport pwaService from '../../services/pwa.service';\nimport { firstBy } from 'thenby';\nimport conf from '../../confs';\nimport EventCard from '../../shared/event-card';\nimport Review from '../../shared/review';\nimport YoutubeLive from '../../shared/youtube-live';\nimport { Subscription } from 'rxjs';\n\nclass Welcome extends React.Component<{ history: any, match: any }, {\n  expanded: boolean, events: null | My.Event[], openReview:boolean,event:null|My.Event, openYoutubeLive:boolean\n}>{\n\n  state = {\n    expanded: false, events: null,openReview: false, event: null, openYoutubeLive: false\n  };\n\n  private _subEvents :Subscription|null = null;\n\n  componentDidMount() {\n    historyService.on(window.location.pathname);\n    this._subEvents = eventStore.subscribe((events: any) => {\n      events.map((e: any) => {\n        const et = eventService.typeOfEvent(e);\n        e.typeOfEvent = ['OPEN', 'SCHEDULED', 'PAST'].findIndex((t: string) => t === et);\n        return e;\n      }).sort(firstBy('typeOfEvent').thenBy('createdAt', { direction: \"desc\" }));\n\n      this.setState({ events });\n    });\n\n    eventStore.load()\n    .then(() => {\n      const id: string = this.props.match.params.id;\n      if(id && (window.location.hash === '#donner-un-avis')){\n        setTimeout(() => {\n          if(authService.isAuth){\n            this.setState({openReview:true, event: (this.state.events || []).find((e:any) => e.id === id) || null});\n          }else{\n            this.props.history.push('/login');\n          }\n        },1000);\n      }\n    });\n  }\n\n  componentWillUnmount(){\n    if(this._subEvents) this._subEvents.unsubscribe();\n  }\n\n  componentDidUpdate() {\n    const id: string = this.props.match.params.id;\n    if (id && (window as any).document.getElementById(`${id}`))\n      (window as any).document.getElementById(`${id}`).scrollIntoView({ behavior: \"smooth\", block: \"end\", inline: \"nearest\" })\n  }\n\n  onClickShare(event: My.Event) {\n    if ((window as any).navigator.share) {\n      (window as any).navigator.share({\n        title: `NiortWeb - meetup \"${event.title}\"`,\n        text: `Infos, inscription et résumé sur ${conf.baseURL}/evenements/${event.id}`,\n      }); // partage l'URL de MDN\n    }\n  }\n\n  /**\n   * Validation lorsqu'on donne l'avis\n   * @param event \n   */\n  onValidateReview(event: My.Event){\n    EventStore.update(event)\n    .then(() => {\n      pwaService.notify(\n        `Avis donné !`,\n        `🗳🙏 Je vote, tu votes, nous progressons, merci de votre participation.`\n      );\n    })\n    .catch(() => {\n      pwaService.notify(\n        `⚠ Une erreur est survenue`,\n        `Oups ! Votre n'avis n'a pu être donné, veuillez réitérer ultérieurement, merci de votre compréhension.`\n      );\n    })\n  }\n\n  onReview(evt:My.Event){\n    if(authService.isAuth){\n      this.setState({openReview:true, event: evt})\n    }else{\n      this.props.history.push('/login');\n    }\n  }\n\n  onRefresh(){\n    eventStore.load();\n  }\n\n  render() {\n    return (<div className=\"tickets tickets-content\">\n      <MenuApp mode=\"home\" history={this.props.history} onRefresh={() => this.onRefresh()} />\n\n      {this.state.events === null && (<Backdrop className=\"backdrop\" open={true}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>)}\n\n      <Review \n      event={this.state.event} \n      open={this.state.openReview} \n      onClose={() => {\n        (window as any).location.hash='';\n        this.setState({openReview : false});\n        \n      }}\n      onValidate={(e:any) => this.onValidateReview(e)} />\n      <SnackAdd />\n\n      <YoutubeLive \n      event={this.state.event} \n      open={this.state.openYoutubeLive} \n      onClose={() => this.setState({openYoutubeLive : false})}\n      />\n\n      <div className=\"events\">\n        <Card className=\"main\" >\n          <CardActionArea>\n            <CardMedia\n              className=\"app-card-media\"\n              image={AppIcon}\n              title=\"logo NW\"\n            />\n            <CardActions disableSpacing>\n              <Button>Qu'est-ce que NiortWeb ?</Button>\n\n              <IconButton\n                className={this.state.expanded ? 'expandOpen' : ''}\n                onClick={() => this.setState({ expanded: !this.state.expanded })}\n              >\n                <ExpandMoreIcon />\n              </IconButton>\n            </CardActions>\n            <Collapse in={this.state.expanded} timeout=\"auto\" unmountOnExit>\n              <CardContent className=\"app-card-content\">\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                NiortWeb est un meetup collaboratif qui a pour objectif de faire découvrir et d’échanger autour de thématiques web. Le speaker / animateur partagera la moitier de son temps avec les participants afin de construire la fin du meetup sur la base des expériences de chacun.\n              </Typography>\n\n                <ul>\n                  <li>\n                    <Chip color=\"primary\" label=\"Format le midi\" /> De 12h30 à 13h30 en petit groupe, généralement 50% de présentation et 50% pour l'échange\n                </li>\n                  <li>\n                    <Chip color=\"primary\" label=\"Format le soir\" /> De 18h à 19h30, présentation plus élaborée\n                </li>\n                </ul>\n              </CardContent>\n            </Collapse>\n          </CardActionArea>\n        </Card>\n\n        {(this.state.events || []).map((evt: any) => (<EventCard \n        key={evt.id} \n        readonly={false} \n        onReview={() => this.onReview(evt)}\n        onYoutubeLive={() => this.setState({openYoutubeLive:true, event: evt})}\n        event={evt} \n        history={this.props.history} />))}\n      </div>\n\n    </div>);\n  }\n}\n\n\nexport default Welcome;\n","/home/florent/VisualStudioCode/app-niortweb/src/reportWebVitals.ts",[],"/home/florent/VisualStudioCode/app-niortweb/src/services/auth.service.ts",[],"/home/florent/VisualStudioCode/app-niortweb/src/stubs/firebase.ts",[],"/home/florent/VisualStudioCode/app-niortweb/src/stores/my-profil.ts",[],"/home/florent/VisualStudioCode/app-niortweb/src/services/history.service.ts",[],"/home/florent/VisualStudioCode/app-niortweb/src/views/error/index.tsx",[],["161","162"],"/home/florent/VisualStudioCode/app-niortweb/src/services/fcm.service.ts",[],"/home/florent/VisualStudioCode/app-niortweb/src/models/EventFormatEnum.ts",[],"/home/florent/VisualStudioCode/app-niortweb/src/models/TagEnum.ts",[],"/home/florent/VisualStudioCode/app-niortweb/src/models/StateEnum.ts",[],"/home/florent/VisualStudioCode/app-niortweb/src/models/EventModeEnum.ts",[],"/home/florent/VisualStudioCode/app-niortweb/src/views/register/index.tsx",["163","164","165"],"import React from 'react';\nimport historyService from '../../services/history.service';\nimport MenuApp from '../../shared/menu-app';\nimport EventCard from '../../shared/event-card';\nimport {EventStore} from '../../stores/event';\nimport eventStore from '../../stores/event';\nimport pwaService from '../../services/pwa.service';\nimport notifStore from '../../stores/notif';\nimport './Register.scss';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport * as My from '../../models/Event';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport { Backdrop, Button, Checkbox, CircularProgress, Fab, FormControlLabel, InputAdornment, TextField } from '@material-ui/core';\nimport { NotifType } from '../../models/notif';\n\nclass Register extends React.Component<{ history: any, location: any, match: any }, { acceptRecord: boolean, event: any }> {\n\n  // The component's Local state.\n  state = {\n    event: null,\n    acceptRecord: false\n  };\n\n\n  componentDidMount() {\n    historyService.on(window.location.pathname);\n\n    const id: string = this.props.match.params.id;\n    eventStore.load()\n      .then((events: My.Event[]) => {\n        this.setState({ event: events.find(e => e.id === id) });\n      });\n  }\n\n  onSubmit(e:any){\n    e.preventDefault();\n\n    const contributor:any = {};\n    const whitelistAttr = ['email','iam','fullName','comment']\n    const data:any = new FormData(e.target);\n    for (const [name,value] of data) {\n      if(whitelistAttr.indexOf(name) === -1) continue;\n      contributor[name] = value;\n    }\n\n    if((window as any).confirm(`Confirmez-vous votre inscription ?`)){\n      const event = {...(this.state.event as any)};\n      event.contributors.push(contributor);\n      EventStore.update(event)\n      .then(() => {\n        this.props.history.push('/');\n        pwaService.notify(\n          `Inscription effectuée`,\n          `✅ Rendez-vous le ${(new Date(event.scheduled)).toLocaleString()} pour \"${event.title}\"`\n        )\n      }).catch(() => {\n        this.props.history.push('/erreur');\n      })\n      \n    }\n  }\n\n  onClickRegister(e:any){\n    const whitelist = ['BUTTON']\n    if(whitelist.indexOf(e.target.tagName) > -1 || whitelist.indexOf(e.target.parentElement.nodeName) > -1){\n      if((window as any).document.getElementById('names') )\n        (window as any).document.getElementById('names').scrollIntoView({block:'end', behavior: 'smooth'})\n    }\n  }\n\n  render() {\n\n    return (<div className=\"register\">\n      <MenuApp mode=\"register\" history={this.props.history} />\n\n\n      {this.state.event === null && (<Backdrop className=\"backdrop\" open={true}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>)}\n\n      {(this.state.event !== null) && (<div className=\"register-content\">\n        <EventCard readonly={true} event={this.state.event} history={this.props.history} />\n      </div>)}\n\n      <form className=\"register-form\" \n      onSubmit={(e:any) => this.onSubmit(e)} \n      onClick={this.onClickRegister}\n//      onClick={() => (window as any).document.getElementById('names') ?(window as any).document.getElementById('names').scrollView({block:'center', behavior: 'smooth'}): null}\n>\n        <div className=\"app-formcontrol\">\n          <TextField\n            id=\"names\"\n            name=\"fullName\"\n            fullWidth\n            label=\"Prénom et nom\"\n            placeholder=\"Pierre Azerty\"\n            required\n\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <AccountCircleIcon />\n                </InputAdornment>\n              ),\n            }}\n          />\n        </div>\n        <div className=\"app-formcontrol\">\n          <TextField\n            fullWidth\n            id=\"email\"\n            label=\"Email\"\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"pierre.azerty@any.com\"\n            required\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <AlternateEmailIcon />\n                </InputAdornment>\n              ),\n            }}\n          /></div>\n        <div className=\"app-formcontrol\">\n          <TextField\n            fullWidth\n            name=\"iam\"\n            label=\"Qui suis-je en quelques mots\"\n            placeholder=\"Développeur 'fullstack'\"\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <HelpOutlineIcon />\n                </InputAdornment>\n              ),\n            }}\n          /></div>\n\n        <div className=\"app-formcontrol\">\n          <TextField\n            fullWidth\n            name=\"comment\"\n            label=\"Commentaire\"\n            placeholder=\"\"\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <ChatBubbleOutlineIcon />\n                </InputAdornment>\n              ),\n            }}\n          /></div>\n\n        <div className=\"app-formcontrol\">\n          <FormControlLabel\n          id=\"acceptRecord\"\n            control={\n              <Checkbox\n                checked={this.state.acceptRecord}\n                required\n                onChange={(e) => this.setState({ acceptRecord: e.target.checked })}\n                name=\"acceptRecord\"\n                color=\"primary\"\n              />\n            }\n            label=\"J'accepte de participer à un événemenet enregistré\"\n          />\n        </div>\n\n        <div className=\"register-footer\">\n          <Button type=\"submit\"\n            className=\"register-action\"\n            size=\"large\"\n            variant=\"outlined\"\n            color=\"secondary\">S'inscrire</Button>\n        </div>\n\n      </form>\n\n    </div>\n\n\n    );\n\n  }\n}\n\nexport default Register;","/home/florent/VisualStudioCode/app-niortweb/src/services/event.service.ts",[],"/home/florent/VisualStudioCode/app-niortweb/src/shared/event-card/index.tsx",["166"],"import React, { useEffect } from 'react';\nimport './EventCard.scss';\nimport Button from '@material-ui/core/Button';\nimport historyService from '../../services/history.service';\nimport { Avatar, Card, CardActionArea, CardActions, CardHeader, Chip, Typography } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { EventFormatEnum } from '../../models/EventFormatEnum';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport HistoryIcon from '@material-ui/icons/History';\nimport CheckIcon from '@material-ui/icons/Check';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\nimport eventService from '../../services/event.service';\nimport DuoIcon from '@material-ui/icons/Duo';\nimport PeopleIcon from '@material-ui/icons/People';\nimport myProfilStore from '../../stores/my-profil';\nimport { Contributor } from '../../models/Contributor';\nimport { Event } from '../../models/Event';\nimport eventStore, { EventStore } from '../../stores/event';\nimport pwaService from '../../services/pwa.service';\nimport { google } from \"calendar-link\";\n\nfunction EventCard(props: any) {\n  historyService.on(window.location.pathname);\n\n  const [event, setEvent] = React.useState<any>(props.event);\n  const [email, setEmail] = React.useState<any>(null);\n  const [isRegistered, setIsRegistered] = React.useState<boolean>(false);\n  const [readonly, setReadonly] = React.useState<any>(props.readonly);\n\n\n  React.useEffect(() => {\n    console.log(props.event);\n      setEvent(props.event);\n      setIsRegistered(props.event.contributors.findIndex((c:Contributor) => c.email === email) > -1);\n  }, [props.event]);\n\n\n  React.useEffect(() => {\n    setReadonly(props.readonly);\n  }, [props.readonly]);\n\n  useEffect(() => {\n    const subMyProfil = myProfilStore.subscribe((user: any) => {\n      if (user && user.email)\n        setEmail(user.email);\n        setIsRegistered(event ? event.contributors.findIndex((c:Contributor) => c.email === email) > -1 : false);\n    });\n    return () => {\n      subMyProfil.unsubscribe();\n    };\n  }); \n\n  const labelOfMode = (mode:string) =>{\n    if(mode === 'REMOTE_ONLY_CONF'){\n      return 'A distance uniquement';\n    }else if(mode === 'REMOTE_AND_PHYSICAL_CONF'){\n      return 'A distance et présentiel'\n    }else if(mode === 'PHYSICAL_CONF'){\n      return 'En présentiel uniquement'\n    }else{\n      return null;\n    }\n  }\n\n  const unregister = (event: Event) => {\n    if(window.confirm(`Confirmez-vous votre désinscription à '${event.title}' ?`)){\n      event.contributors = event.contributors.filter(c => c.email !== email);\n      EventStore.update(event)\n      .then(() => {\n        console.log('ok');\n        eventStore.load();\n        pwaService.notify(\n          `Désinscription effectuée`,\n          `✅ Vous vous êtes bien désinscrits : \"${event.title}\"`\n        )\n      }).catch(() => {\n        props.history.push('/erreur');\n      })\n    }\n  }\n\n  return (\n    <Card className=\"event\" key={'ec'+event.id} id={event.id} >\n          <CardActionArea>\n            <CardHeader key={'ec'+event.id}\n              avatar={\n                ['OPEN','SCHEDULED', 'PAST'].filter(t => t === eventService.typeOfEvent(event)).map(t => (<Avatar key={t} className={t === 'OPEN' ? 'success-avatar': 'default'}>\n                  {t === 'OPEN' && (<CheckIcon></CheckIcon>)}\n                  {t === 'SCHEDULED' && (<ScheduleIcon></ScheduleIcon>)}\n                  {t === 'PAST' && (<HistoryIcon></HistoryIcon>)}\n                </Avatar>))\n              }\n              action={\n                <IconButton>\n                  {(event.mode !== 'PHYSICAL_CONF') && (<DuoIcon />)}\n                  {(event.mode !== 'REMOTE_ONLY_CONF') && (<PeopleIcon />)}\n                </IconButton>\n              }\n              title={`${isRegistered ? '[INSCRIT.E] ': ''}${event.title}`}\n              subheader={(new Date(event.scheduled).toLocaleString())}\n            />\n            <CardMedia\n              className=\"app-card-media\"\n              image={event.image}\n              title=\"logo NW\"\n            />\n            <CardContent className=\"app-card-content\">\n              <Typography className=\"tags\" variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                <Chip className=\"app-chip-item\" color=\"secondary\" label={event.format === EventFormatEnum.SIMPLE ? 'Format du midi' : 'Format du soir'} /> \n                {(labelOfMode(event.mode) !== null) && (<Chip color=\"primary\" className=\"app-chip-item\" label={labelOfMode(event.mode)} />)}\n                {event.tags.map((t:any) => (<Chip key={t} color=\"primary\" className=\"app-chip-item\" label={t} />))}\n              </Typography>\n              <Typography className=\"description\" variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                {event.description}\n              </Typography>\n\n              {event.where && (<Typography className=\"description speaker\" variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                Lieu / comment : {event.where}\n              </Typography>)}\n              <Typography className=\"description speaker\" variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                Animation : {event.speaker.firstname} {event.speaker.lastname} {event.speaker.job}\n              </Typography>\n\n\n            </CardContent>\n            \n            {!isRegistered && !readonly && ( (eventService.typeOfEvent(event) === 'OPEN' ) && ((event.allowMaxContributors - event.contributors.length)>0) )&&(<CardActions>\n              <Button onClick={() => props.history.push(`/evenements/${event.id}/inscription`)}>S'inscrire ({(event.allowMaxContributors - event.contributors.length) } place.s restante.s)</Button>\n            </CardActions>)}\n            {!isRegistered && !readonly && ( (eventService.typeOfEvent(event) === 'OPEN' ) && (event.allowMaxContributors === -1 ))&& (<CardActions>\n              <Button onClick={() => props.history.push(`/evenements/${event.id}/inscription`)}>S'inscrire</Button>\n            </CardActions>)}\n            {!isRegistered && !readonly && ( (eventService.typeOfEvent(event) === 'OPEN' ) && (event.allowMaxContributors !== -1 ) && ((event.allowMaxContributors - event.contributors.length)<=0) )&&(<CardActions>\n              <Button disabled={true}>S'inscrire (complet)</Button>\n\n              {event.youtubeLink && (<Button onClick={() => props.onYoutubeLive ? props.onYoutubeLive(event) : null}>Live Youtube</Button>)}\n            </CardActions>)}\n            {isRegistered && !readonly &&  (eventService.typeOfEvent(event) === 'OPEN' ) && (<CardActions className=\"registered-card-actions\">\n              <Button onClick={() => unregister(event)}>Se désinscrire</Button>\n              <Button target=\"_blank\" href={google({\n                title: event.title,\n                description: event.description,\n                start: event.scheduled,\n                duration: [1, \"hour\"],\n              })}>+ Agenda</Button>\n            </CardActions>)}\n           \n\n\n            {!readonly &&  (eventService.typeOfEvent(event) === 'PAST' ) &&( <CardActions>\n              <Button\n                disabled={ !!(event.reviews || []).find((r:any) => r.email === email) } \n                onClick={() => props.onReview ? props.onReview(event) : null} startIcon={<NotificationsActiveIcon className=\"warn-icon\" />}>\n                  Avis\n              </Button>\n              <Button disabled={!event.resumeLink} href={event.resumeLink} target=\"_blank\">Résumé</Button>\n              {event.youtubeLink &&(<Button href={event.youtubeLink} target=\"_blank\">Replay</Button>)}\n              \n            </CardActions>)}\n          </CardActionArea>\n        </Card>\n  );\n}\n\nexport default EventCard;\n","/home/florent/VisualStudioCode/app-niortweb/src/shared/review/index.tsx",["167"],"\nimport React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport HowToVoteIcon from '@material-ui/icons/HowToVote';\nimport { Box, FormControl, InputAdornment, InputLabel, NativeSelect, Select, TextField, Typography } from '@material-ui/core';\nimport Rating from '@material-ui/lab/Rating/Rating';\nimport EmojiObjectsIcon from '@material-ui/icons/EmojiObjects';\nimport myProfilStore from '../../stores/my-profil';\nimport * as R from '../../models/Review';\n\nconst Review = (props: any) => {\n  const [open, setOpen] = React.useState(false);\n  const [comment, setComment] = React.useState('');\n  const [event, setEvent] = React.useState<any>(null);\n  const [rate, setRate] = React.useState(null);\n  const [email, setEmail] = React.useState(null);\n  const [findOutMore, setFindOutMore] = React.useState('n');\n\n  React.useEffect(() => {\n    setOpen(props.open);\n    setRate(null);\n    setComment('');\n    setFindOutMore('n');\n  }, [props.open]);\n\n  React.useEffect(() => {\n    setEvent(props.event);\n  }, [props.event]);\n\n  const handleClose = () => {\n    setOpen(false);\n    props.onClose();\n  };\n\n  useEffect(() => {\n    const subMyProfil = myProfilStore.subscribe((user: any) => {\n      if (user && user.email)\n        setEmail(user.email);\n    });\n    return () => {\n      subMyProfil.unsubscribe();\n    };\n  });\n  \n\n  const onValidate = () => {\n    if((event !== null) && props.onValidate && email){\n      event.reviews = event.reviews || [];\n\n      event.reviews.push({\n        comment : comment || '',\n        email : email || '',\n        note: rate || 0,\n        findOutMore : findOutMore === 'y'\n      } as R.Review);\n\n      props.onValidate(event);\n      handleClose();\n    }\n  }\n\n  return (\n    <Dialog\n      className=\"app-dialog\"\n      open={open}\n      onClose={handleClose}\n    >\n      <DialogTitle id=\"alert-dialog-title\">Donner son avis</DialogTitle>\n      <DialogContent className=\"app-dialog-content\">\n        <div className=\"icon-area\">\n          <HowToVoteIcon className=\"icon\" />\n        </div>\n        {event && (<DialogContentText className=\"title-dialog-content-text\" align=\"center\">\n          {event.title}\n          </DialogContentText>)}\n        <DialogContentText id=\"alert-dialog-description\" align=\"center\">\n          Pour offrir un contenu de qualité, merci de bien vouloir vous exprimer ci-dessous 🙂\n          </DialogContentText>\n        <div className=\"app-formcontrol centered\">\n          <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n            <Typography component=\"legend\">Note générale*</Typography>\n            <Rating className=\"app-rating\" name=\"pristine\" value={rate} onChange={(e: any, nv: any) => setRate(nv)} />\n          </Box>\n        </div>\n\n        <div className=\"app-formcontrol \">\n          <FormControl fullWidth>\n            <InputLabel htmlFor=\"age-native-simple\">Approfondir le sujet (format plus long)</InputLabel>\n            <NativeSelect\n              fullWidth\n              value={findOutMore}\n              onChange={(e: any) => setFindOutMore(e.target.value) }\n              inputProps={{\n                name: 'findOutMore',\n                id: 'age-native-simple',\n              }}\n              \n            >\n              <option key=\"fomy\" value={'y'}>Oui</option>\n              <option key=\"fomn\" value={'n'}>Non</option>\n            </NativeSelect>\n          </FormControl>\n        </div>\n\n        <div className=\"app-formcontrol\">\n        <TextField\n            fullWidth\n            name=\"comment\"\n            label=\"Commentaire et idée de sujet\"\n            placeholder=\"La mise en application des chatbots\"\n            value={comment}\n            onChange={(e:any) => setComment(e.target.value)}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <EmojiObjectsIcon />\n                </InputAdornment>\n              ),\n            }}\n          />\n        </div>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\" autoFocus>\n          Fermer\n          </Button>\n          <Button  color=\"secondary\" onClick={onValidate} disabled={rate === null}>\n          Valider\n          </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default Review;","/home/florent/VisualStudioCode/app-niortweb/src/index.tsx",[],["168","169"],"/home/florent/VisualStudioCode/app-niortweb/src/views/no-match/index.tsx",[],"/home/florent/VisualStudioCode/app-niortweb/src/shared/youtube-live/index.tsx",["170"],"\nimport React, { useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport YouTubeIcon from '@material-ui/icons/YouTube';\n\nconst YoutubeLive = (props: any) => {\n  const [open, setOpen] = React.useState(false);\n  const [event, setEvent] = React.useState<any>(null);\n\n  React.useEffect(() => {\n    setOpen(props.open);\n  }, [props.open]);\n\n  React.useEffect(() => {\n    setEvent(props.event);\n  }, [props.event]);\n\n  const handleClose = () => {\n    setOpen(false);\n    props.onClose();\n  };\n\n  return (\n    <Dialog\n      className=\"app-dialog\"\n      open={open}\n      onClose={handleClose}\n    >\n      <DialogTitle id=\"alert-dialog-title\">Youtube Live</DialogTitle>\n      <DialogContent>\n        <div className=\"icon-area\">\n          <YouTubeIcon className=\"icon youtube-icon\" />\n        </div>\n        <DialogContentText id=\"alert-dialog-description\" align=\"center\">\n          Pour suivre en direct l'événement, rendez-vous sur le lien ci-dessous.\n          </DialogContentText>\n       \n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\" autoFocus>\n          Fermer\n          </Button>\n          <Button  color=\"secondary\" target=\"_blank\" href={event?.youtubeLink} >\n          Accès au direct\n          </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default YoutubeLive;","/home/florent/VisualStudioCode/app-niortweb/src/stores/event.ts",[],"/home/florent/VisualStudioCode/app-niortweb/src/views/email-check/index.tsx",[],{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"171","replacedBy":"175"},{"ruleId":"173","replacedBy":"176"},{"ruleId":"171","replacedBy":"177"},{"ruleId":"173","replacedBy":"178"},{"ruleId":"179","severity":1,"message":"180","line":37,"column":3,"nodeType":"181","endLine":37,"endColumn":31},{"ruleId":"171","replacedBy":"182"},{"ruleId":"173","replacedBy":"183"},{"ruleId":"184","severity":1,"message":"185","line":57,"column":125,"nodeType":"186","messageId":"187","endLine":57,"endColumn":181,"fix":"188"},{"ruleId":"189","severity":1,"message":"190","line":86,"column":19,"nodeType":"191","messageId":"192","endLine":86,"endColumn":23},{"ruleId":"171","replacedBy":"193"},{"ruleId":"173","replacedBy":"194"},{"ruleId":"171","replacedBy":"195"},{"ruleId":"173","replacedBy":"196"},{"ruleId":"189","severity":1,"message":"197","line":24,"column":8,"nodeType":"191","messageId":"192","endLine":24,"endColumn":16},{"ruleId":"189","severity":1,"message":"198","line":82,"column":10,"nodeType":"191","messageId":"192","endLine":82,"endColumn":14},{"ruleId":"189","severity":1,"message":"199","line":84,"column":10,"nodeType":"191","messageId":"192","endLine":84,"endColumn":23},{"ruleId":"189","severity":1,"message":"200","line":5,"column":10,"nodeType":"191","messageId":"192","endLine":5,"endColumn":16},{"ruleId":"189","severity":1,"message":"201","line":5,"column":49,"nodeType":"191","messageId":"192","endLine":5,"endColumn":59},{"ruleId":"171","replacedBy":"202"},{"ruleId":"173","replacedBy":"203"},{"ruleId":"189","severity":1,"message":"204","line":8,"column":8,"nodeType":"191","messageId":"192","endLine":8,"endColumn":18},{"ruleId":"189","severity":1,"message":"205","line":15,"column":56,"nodeType":"191","messageId":"192","endLine":15,"endColumn":59},{"ruleId":"189","severity":1,"message":"206","line":16,"column":10,"nodeType":"191","messageId":"192","endLine":16,"endColumn":19},{"ruleId":"207","severity":1,"message":"208","line":37,"column":6,"nodeType":"209","endLine":37,"endColumn":19,"suggestions":"210"},{"ruleId":"189","severity":1,"message":"211","line":10,"column":70,"nodeType":"191","messageId":"192","endLine":10,"endColumn":76},{"ruleId":"171","replacedBy":"212"},{"ruleId":"173","replacedBy":"213"},{"ruleId":"189","severity":1,"message":"214","line":2,"column":17,"nodeType":"191","messageId":"192","endLine":2,"endColumn":26},"no-native-reassign",["215"],"no-negated-in-lhs",["216"],["215"],["216"],["215"],["216"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["215"],["216"],"new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"217","text":"218"},"@typescript-eslint/no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar",["215"],["216"],["215"],["216"],"'SyncIcon' is defined but never used.","'auth' is assigned a value but never used.","'administrator' is assigned a value but never used.","'Avatar' is defined but never used.","'CardHeader' is defined but never used.",["215"],["216"],"'notifStore' is defined but never used.","'Fab' is defined but never used.","'NotifType' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'email'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setIsRegistered' needs the current value of 'email'.","ArrayExpression",["219"],"'Select' is defined but never used.",["215"],["216"],"'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",[2033,2033],"()",{"desc":"220","fix":"221"},"Update the dependencies array to be: [email, props.event]",{"range":"222","text":"223"},[1752,1765],"[email, props.event]"]