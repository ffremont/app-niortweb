[{"/home/florent/VisualStudioCode/app-niortweb/src/App.tsx":"1","/home/florent/VisualStudioCode/app-niortweb/src/shared/private-route/index.tsx":"2","/home/florent/VisualStudioCode/app-niortweb/src/models/notif.ts":"3","/home/florent/VisualStudioCode/app-niortweb/src/confs/index.ts":"4","/home/florent/VisualStudioCode/app-niortweb/src/shared/snack-add/index.tsx":"5","/home/florent/VisualStudioCode/app-niortweb/src/services/pwa.service.ts":"6","/home/florent/VisualStudioCode/app-niortweb/src/views/login/index.tsx":"7","/home/florent/VisualStudioCode/app-niortweb/src/stores/notif.ts":"8","/home/florent/VisualStudioCode/app-niortweb/src/services/http-client.service.ts":"9","/home/florent/VisualStudioCode/app-niortweb/src/shared/menu-app/index.tsx":"10","/home/florent/VisualStudioCode/app-niortweb/src/views/welcome/index.tsx":"11","/home/florent/VisualStudioCode/app-niortweb/src/reportWebVitals.ts":"12","/home/florent/VisualStudioCode/app-niortweb/src/services/auth.service.ts":"13","/home/florent/VisualStudioCode/app-niortweb/src/stubs/firebase.ts":"14","/home/florent/VisualStudioCode/app-niortweb/src/stores/my-profil.ts":"15","/home/florent/VisualStudioCode/app-niortweb/src/services/history.service.ts":"16","/home/florent/VisualStudioCode/app-niortweb/src/views/error/index.tsx":"17","/home/florent/VisualStudioCode/app-niortweb/src/services/fcm.service.ts":"18","/home/florent/VisualStudioCode/app-niortweb/src/models/EventFormatEnum.ts":"19","/home/florent/VisualStudioCode/app-niortweb/src/models/TagEnum.ts":"20","/home/florent/VisualStudioCode/app-niortweb/src/models/StateEnum.ts":"21","/home/florent/VisualStudioCode/app-niortweb/src/models/EventModeEnum.ts":"22"},{"size":2725,"mtime":1614940619205,"results":"23","hashOfConfig":"24"},{"size":936,"mtime":1606743396691,"results":"25","hashOfConfig":"24"},{"size":122,"mtime":1606986087305,"results":"26","hashOfConfig":"24"},{"size":1246,"mtime":1615553491238,"results":"27","hashOfConfig":"24"},{"size":1677,"mtime":1606985931102,"results":"28","hashOfConfig":"24"},{"size":1844,"mtime":1589949033459,"results":"29","hashOfConfig":"24"},{"size":5281,"mtime":1614925577949,"results":"30","hashOfConfig":"24"},{"size":406,"mtime":1587839601901,"results":"31","hashOfConfig":"24"},{"size":1451,"mtime":1606741697258,"results":"32","hashOfConfig":"24"},{"size":8101,"mtime":1615553666913,"results":"33","hashOfConfig":"24"},{"size":7952,"mtime":1615553384083,"results":"34","hashOfConfig":"24"},{"size":425,"mtime":1606719130982,"results":"35","hashOfConfig":"24"},{"size":2295,"mtime":1607077237318,"results":"36","hashOfConfig":"24"},{"size":3334,"mtime":1607254109879,"results":"37","hashOfConfig":"24"},{"size":1150,"mtime":1607078001919,"results":"38","hashOfConfig":"24"},{"size":1087,"mtime":1592639423777,"results":"39","hashOfConfig":"24"},{"size":803,"mtime":1606734163176,"results":"40","hashOfConfig":"24"},{"size":3118,"mtime":1606741499441,"results":"41","hashOfConfig":"24"},{"size":52,"mtime":1615550794792,"results":"42","hashOfConfig":"24"},{"size":51,"mtime":1615550758969,"results":"43","hashOfConfig":"24"},{"size":55,"mtime":1615552109513,"results":"44","hashOfConfig":"24"},{"size":165,"mtime":1615550789828,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"billru",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"63","usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/florent/VisualStudioCode/app-niortweb/src/App.tsx",[],["96","97"],"/home/florent/VisualStudioCode/app-niortweb/src/shared/private-route/index.tsx",[],["98","99"],"/home/florent/VisualStudioCode/app-niortweb/src/models/notif.ts",[],"/home/florent/VisualStudioCode/app-niortweb/src/confs/index.ts",["100"],"/home/florent/VisualStudioCode/app-niortweb/src/shared/snack-add/index.tsx",[],["101","102"],"/home/florent/VisualStudioCode/app-niortweb/src/services/pwa.service.ts",[],"/home/florent/VisualStudioCode/app-niortweb/src/views/login/index.tsx",["103","104"],"import React from 'react';\nimport './Login.scss';\nimport {\n  Redirect\n} from 'react-router-dom';\nimport Avatar from '@material-ui/core/Avatar';\nimport AppIcon from '../../assets/images/logo512.png';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport GoogleIcon from '../../assets/images/google.svg';\nimport MailIcon from '../../assets/images/mail.svg';\nimport authService from '../../services/auth.service';\nimport {FirebaseStub} from '../../stubs/firebase';\nimport historyService from '../../services/history.service';\n\nif(process.env.REACT_APP_STAGE !== 'prod'){\n  (window as any).firebase = (new FirebaseStub()).init();\n}\n\nclass Login extends React.Component<{history:any,location:any}, {loading:boolean, isSignedIn:boolean, from:string}> {\n  unregisterAuthObserver: any = null;\n\n  // The component's Local state.\n  state = {\n    loading: true, // waiting onAuthStateChanged\n    isSignedIn: false, // Local signed-in state.\n    from: '/tickets'\n  };\n\n  private sign(provider:any){\n    provider.addScope('profile');\n    provider.addScope('email');\n    (window as any).firebase.auth().signInWithRedirect(provider);\n  }\n\n  signEmail(){\n    const f = (window as any).firebase;\n\n    if(f){\n      const email:any = window.prompt('Merci de saisir votre email ');\n\n      f.auth().sendSignInLinkToEmail(email, {\n        url: window.location.origin,\n        handleCodeInApp: true,\n      })\n      .then(function() {\n        window.localStorage.setItem('emailForSignIn', email);\n        alert('Un message vous a été envoyé (attention aux tries automatiques : notifications, promotions, spam...)');\n      })\n    }\n  }\n\n  signGoogle(){\n    const provider:any = process.env.REACT_APP_STAGE === 'prod' ?  new (window as any).firebase.auth.GoogleAuthProvider() : new ((window as any).firebase.auth.GoogleAuthProvider());\n    this.sign(provider);    \n  }\n\n  componentDidMount() {\n    historyService.on(window.location.pathname);\n    this.registerOnFirebase();\n\n    if(this.props.location){\n      if(this.props.location.state){\n        this.setState({from: this.props.location.state.fromPathname});\n      }else{\n        this.setState({from: '/tickets'});\n      }      \n    }\n  }\n\n  private registerOnFirebase(){\n    this.unregisterAuthObserver = (window as any).firebase.auth().onAuthStateChanged(\n      (user:any) => {\n        if(user){\n          const promises = [(window as any).firebase.auth().currentUser.getIdToken().then((token:string) => {\n            authService.setIdToken(token)\n            return token;\n          })];\n          promises.push(authService.authenticate({email: user.email}));\n          \n          Promise.all(promises)\n          .then((results) => {\n            const user = results[1];\n            //let from = '/tickets';\n            this.setState({ loading: false, isSignedIn: true, from: this.state.from });\n          }).catch((e) => {\n            this.setState({ loading: false, isSignedIn: false, from:'/error' });\n\n          });\n        }else{\n          // no authenticated, noop show buttons\n          this.setState({ loading: false, isSignedIn: false });\n        }        \n      }\n    );\n  }\n\n  // Make sure we un-register Firebase observers when the component unmounts.\n  componentWillUnmount() {\n    if(this.unregisterAuthObserver){\n      this.unregisterAuthObserver();\n    }\n  }\n\n  render() {\n    if(this.state.loading){\n      return <div\n      style={{\n          position: 'absolute', \n          left: '50%', \n          top: '50%',\n          transform: 'translate(-50%, -50%)'\n      }}\n  ><CircularProgress className=\"wait-auth\" /></div>;\n    }else{\n      if (this.state.isSignedIn) {\n        return <Redirect\n          to={{\n            pathname: this.state.from,\n            state: { from: '/login' }\n          }}\n        />;\n      } else {\n        return <div className=\"login\">\n          <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className=\"paper\">\n              <Avatar className=\"avatar\" src={AppIcon}>\n               \n              </Avatar>\n              <Typography component=\"h1\" variant=\"h5\">\n                Connexion\n          </Typography>\n              \n              <Button\n                type=\"button\"\n                fullWidth\n                size=\"large\"\n                variant=\"contained\"\n                color=\"default\"\n                onClick={() => this.signGoogle()}\n                className=\"provider google\"\n              >\n                <img alt=\"google\" src={GoogleIcon} /> Connexion par Google\n            </Button>\n            <Button\n                type=\"button\"\n                fullWidth\n                disabled={false}\n                color=\"primary\"\n                size=\"large\"\n                onClick={() => this.signEmail()}\n                variant=\"contained\"\n                className=\"provider email\"\n              >\n                <img alt=\"mail\" src={MailIcon} /> Connexion par email\n            </Button>\n            </div>\n          </Container>\n  \n        </div>;\n      }\n    }\n\n    \n    \n  }\n}\n\n\nexport default Login;\n","/home/florent/VisualStudioCode/app-niortweb/src/stores/notif.ts",[],"/home/florent/VisualStudioCode/app-niortweb/src/services/http-client.service.ts",[],["105","106"],"/home/florent/VisualStudioCode/app-niortweb/src/shared/menu-app/index.tsx",["107","108","109"],"/home/florent/VisualStudioCode/app-niortweb/src/views/welcome/index.tsx",["110"],"import React from 'react';\nimport './Welcome.scss';\nimport MenuApp from '../../shared/menu-app';\nimport historyService from '../../services/history.service';\nimport { Avatar, Backdrop, Button, CardActions, CardHeader, Chip, CircularProgress } from '@material-ui/core';\nimport SnackAdd from '../../shared/snack-add';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport IconButton from '@material-ui/core/IconButton';\nimport Collapse from '@material-ui/core/Collapse';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport AppIcon from '../../assets/images/banner-logo.png';\nimport * as My from '../../models/Event';\nimport { StateEnum } from '../../models/StateEnum';\nimport { EventFormatEnum } from '../../models/EventFormatEnum';\nimport { EventModeEnum } from '../../models/EventModeEnum';\nimport ShareIcon from '@material-ui/icons/Share';\nimport { TagEnum } from '../../models/TagEnum';\nimport HistoryIcon from '@material-ui/icons/History';\nimport CheckIcon from '@material-ui/icons/Check';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\n\nclass Welcome extends React.Component<{ history: any, match: any }, {\n  expanded: boolean, events: null | My.Event[]\n}>{\n\n  state = {\n    expanded: false, events: [{\n      id: '007',\n      state: StateEnum.OK,\n      format: EventFormatEnum.SIMPLE,\n      mode: EventModeEnum.REMOTE_AND_PHYSICAL_CONF,\n      createdAt: (new Date()).getTime(),\n      scheduled: (new Date()).getTime() - 1000 * 3600 * 24 * 30,\n      speaker: {\n        firstname: 'Florent',\n        lastname: 'FREMONT',\n        email: 'ff.f@ff.fr',\n        job: 'Fullstack developer'\n      },\n      duration: 60,\n      image: 'https://res.cloudinary.com/dyuwlqafx/image/upload/v1615549320/app-niotweb/iStock-1029035836-e1575983057612.jpg',\n      title: 'Quest ce que lIA?',\n      tags: [TagEnum.IA],\n      description: '...',\n      allowMaxContributors: 20,\n      contributors: [],\n      youtubeLink:'https://...'\n    }]\n  };\n\n  componentWillUnmount() {\n  }\n\n  componentDidMount() {\n    historyService.on(window.location.pathname);\n\n    this.loadData();\n  }\n\n  loadData() {\n    /*const orders = [TicketStateEnum.TO_SELL, TicketStateEnum.TO_BUY, TicketStateEnum.WAIT, TicketStateEnum.PLANNED, TicketStateEnum.SOLD];\n    Promise.all([ticketStore.load(), currencyStore.load()])\n      .then((data: any) => {\n        const tickets = data[0].map((t: Ticket) => {\n          const state = ticketStore.stateOf(t, data[1]);\n          return { ...t, state, order: orders.indexOf(state) }\n        });\n        tickets.sort(firstBy('order').thenBy('at', { direction: \"desc\" }))\n        this.setState({ tickets, currencies: data[1] });\n      });*/\n  }\n\n  typeOfEvent(event:My.Event){\n    if(event.scheduled >= (new Date()).getTime() && event.state === StateEnum.OK){\n      return 'OPEN';\n    }else if(event.scheduled < (new Date()).getTime() && event.state === StateEnum.OK){\n      return 'PAST'\n    }else{\n      return 'SCHEDULED';\n    }\n  }\n\n  render() {\n\n    return (<div className=\"tickets tickets-content\">\n      <MenuApp mode=\"home\" history={this.props.history} onRefresh={() => this.loadData()} />\n\n\n\n      {this.state.events === null && (<Backdrop className=\"backdrop\" open={true}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>)}\n\n\n      <SnackAdd />\n\n      <div className=\"events\">\n        <Card className=\"main\" >\n          <CardActionArea>\n            <CardMedia\n              className=\"app-card-media\"\n              image={AppIcon}\n              title=\"logo NW\"\n            />\n            <CardActions disableSpacing>\n              <Button>Qu'est-ce que NiortWeb ?</Button>\n\n              <IconButton\n                className={this.state.expanded ? 'expandOpen' : ''}\n                onClick={() => this.setState({ expanded: !this.state.expanded })}\n              >\n                <ExpandMoreIcon />\n              </IconButton>\n            </CardActions>\n            <Collapse in={this.state.expanded} timeout=\"auto\" unmountOnExit>\n              <CardContent className=\"app-card-content\">\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging\n                  across all continents except Antarctica\n              </Typography>\n\n                <ul>\n                  <li>\n                    <Chip color=\"primary\" label=\"Format le midi\" /> Sed rutrum id est et pellentesque. Sed sed fermentum magna, quis venenatis nunc. Nullam luctus, nibh nec egestas volutpat, tellus mauris placerat mauris.\n                </li>\n                  <li>\n                    <Chip color=\"primary\" label=\"Format le soir\" /> Sed rutrum id est et pellentesque. Sed sed fermentum magna, quis venenatis nunc. Nullam luctus, nibh nec egestas volutpat, tellus mauris placerat mauris.\n                </li>\n                </ul>\n              </CardContent>\n            </Collapse>\n          </CardActionArea>\n        </Card>\n\n        {(this.state.events || []).map(event => (<Card className=\"event\" >\n          <CardActionArea>\n            <CardHeader\n              avatar={\n                ['OPEN','SCHEDULED', 'PAST'].filter(t => t === this.typeOfEvent(event)).map(t => (<Avatar className={t == 'OPEN' ? 'success-avatar': 'default'}>\n                  {t === 'OPEN' && (<CheckIcon></CheckIcon>)}\n                  {t === 'SCHEDULED' && (<ScheduleIcon></ScheduleIcon>)}\n                  {t === 'PAST' && (<HistoryIcon></HistoryIcon>)}\n                </Avatar>))\n              }\n              action={\n                <IconButton aria-label=\"settings\">\n                  <ShareIcon />\n                </IconButton>\n              }\n              title={event.title}\n              subheader={(new Date(event.scheduled).toLocaleString())}\n            />\n            <CardMedia\n              className=\"app-card-media\"\n              image={event.image}\n              title=\"logo NW\"\n            />\n            <CardContent className=\"app-card-content\">\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                <Chip className=\"app-chip-item\" color=\"secondary\" label={event.format === EventFormatEnum.SIMPLE ? 'Format du midi' : 'Format du soir'} /> {event.tags.map(t => (<Chip color=\"primary\" label={t} />))}\n              </Typography>\n              <Typography className=\"description\" variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging\n                across all continents except Antarctica\n              </Typography>\n\n\n            </CardContent>\n            {( (this.typeOfEvent(event) === 'OPEN' ) && ((event.allowMaxContributors - event.contributors.length)>0) )&&(<CardActions>\n              <Button>S'inscrire ({(event.allowMaxContributors - event.contributors.length) } place.s restante.s)</Button>\n            </CardActions>)}\n\n            {( (this.typeOfEvent(event) === 'OPEN' ) && ((event.allowMaxContributors - event.contributors.length)<=0) )&&(<CardActions>\n              <Button disabled={true}>S'inscrire (complet)</Button>\n\n              {event.youtubeLink && (<Button target=\"_blank\" href={event.youtubeLink}>Live Youtube</Button>)}\n            </CardActions>)}\n\n            { (this.typeOfEvent(event) === 'PAST' ) &&( <CardActions>\n              <Button startIcon={<NotificationsActiveIcon className=\"warn-icon\" />}>Donner avis</Button>\n              <Button>Accès résumé</Button>\n              \n            </CardActions>)}\n          </CardActionArea>\n        </Card>))}\n      </div>\n\n    </div>);\n  }\n}\n\n\nexport default Welcome;\n","/home/florent/VisualStudioCode/app-niortweb/src/reportWebVitals.ts",[],"/home/florent/VisualStudioCode/app-niortweb/src/services/auth.service.ts",[],"/home/florent/VisualStudioCode/app-niortweb/src/stubs/firebase.ts",[],"/home/florent/VisualStudioCode/app-niortweb/src/stores/my-profil.ts",[],"/home/florent/VisualStudioCode/app-niortweb/src/services/history.service.ts",[],"/home/florent/VisualStudioCode/app-niortweb/src/views/error/index.tsx",[],"/home/florent/VisualStudioCode/app-niortweb/src/services/fcm.service.ts",[],"/home/florent/VisualStudioCode/app-niortweb/src/models/EventFormatEnum.ts",[],"/home/florent/VisualStudioCode/app-niortweb/src/models/TagEnum.ts",[],"/home/florent/VisualStudioCode/app-niortweb/src/models/StateEnum.ts",[],"/home/florent/VisualStudioCode/app-niortweb/src/models/EventModeEnum.ts",[],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"111","replacedBy":"115"},{"ruleId":"113","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":36,"column":3,"nodeType":"119","endLine":36,"endColumn":31},{"ruleId":"111","replacedBy":"120"},{"ruleId":"113","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":57,"column":125,"nodeType":"124","messageId":"125","endLine":57,"endColumn":181,"fix":"126"},{"ruleId":"127","severity":1,"message":"128","line":86,"column":19,"nodeType":"129","messageId":"130","endLine":86,"endColumn":23},{"ruleId":"111","replacedBy":"131"},{"ruleId":"113","replacedBy":"132"},{"ruleId":"127","severity":1,"message":"133","line":8,"column":8,"nodeType":"129","messageId":"130","endLine":8,"endColumn":21},{"ruleId":"127","severity":1,"message":"134","line":21,"column":8,"nodeType":"129","messageId":"130","endLine":21,"endColumn":16},{"ruleId":"127","severity":1,"message":"135","line":82,"column":10,"nodeType":"129","messageId":"130","endLine":82,"endColumn":14},{"ruleId":"136","severity":1,"message":"137","line":144,"column":120,"nodeType":"138","messageId":"139","endLine":144,"endColumn":122},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],["140"],["141"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["140"],["141"],"new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"142","text":"143"},"@typescript-eslint/no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar",["140"],["141"],"'AccountCircle' is defined but never used.","'HelpIcon' is defined but never used.","'auth' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",[2040,2040],"()"]