[{"/home/florent/VisualStudioCode/app-niortweb/src/App.tsx":"1","/home/florent/VisualStudioCode/app-niortweb/src/shared/private-route/index.tsx":"2","/home/florent/VisualStudioCode/app-niortweb/src/views/ticket-detail/index.tsx":"3","/home/florent/VisualStudioCode/app-niortweb/src/services/ticket.service.ts":"4","/home/florent/VisualStudioCode/app-niortweb/src/stores/currency.ts":"5","/home/florent/VisualStudioCode/app-niortweb/src/models/notif.ts":"6","/home/florent/VisualStudioCode/app-niortweb/src/confs/index.ts":"7","/home/florent/VisualStudioCode/app-niortweb/src/shared/snack-add/index.tsx":"8","/home/florent/VisualStudioCode/app-niortweb/src/shared/balance/index.tsx":"9","/home/florent/VisualStudioCode/app-niortweb/src/services/pwa.service.ts":"10","/home/florent/VisualStudioCode/app-niortweb/src/views/login/index.tsx":"11","/home/florent/VisualStudioCode/app-niortweb/src/stores/notif.ts":"12","/home/florent/VisualStudioCode/app-niortweb/src/services/http-client.service.ts":"13"},{"size":2937,"mtime":1611562168027,"results":"14","hashOfConfig":"15"},{"size":936,"mtime":1606743396691,"results":"16","hashOfConfig":"15"},{"size":16610,"mtime":1608808833496,"results":"17","hashOfConfig":"15"},{"size":1102,"mtime":1607260142589,"results":"18","hashOfConfig":"15"},{"size":886,"mtime":1606802316079,"results":"19","hashOfConfig":"15"},{"size":122,"mtime":1606986087305,"results":"20","hashOfConfig":"15"},{"size":3781,"mtime":1612429814976,"results":"21","hashOfConfig":"15"},{"size":1677,"mtime":1606985931102,"results":"22","hashOfConfig":"15"},{"size":6582,"mtime":1607721960868,"results":"23","hashOfConfig":"15"},{"size":1844,"mtime":1589949033459,"results":"24","hashOfConfig":"15"},{"size":5281,"mtime":1614925577949,"results":"25","hashOfConfig":"15"},{"size":406,"mtime":1587839601901,"results":"26","hashOfConfig":"15"},{"size":1451,"mtime":1606741697258,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"billru",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/florent/VisualStudioCode/app-niortweb/src/App.tsx",[],["57","58"],"/home/florent/VisualStudioCode/app-niortweb/src/shared/private-route/index.tsx",[],"/home/florent/VisualStudioCode/app-niortweb/src/views/ticket-detail/index.tsx",["59","60"],"/home/florent/VisualStudioCode/app-niortweb/src/services/ticket.service.ts",["61","62"],"import { Currencies } from \"../models/Currencies\";\nimport { Currency } from \"../models/Currency\";\nimport { Ticket } from \"../models/Ticket\";\nimport { TicketStateEnum } from \"../models/TicketStateEnum\";\n\nexport class TicketService{\n    static winEuro(t: Ticket, currencies:Currencies) {\n        if (currencies && (t.state.toString() !== TicketStateEnum.PLANNED)) {\n          const currencyOfCrypto = (currencies as any).data.find((c: Currency) => c.name == t.crypto);\n          const currencyOfWantFor = (currencies as any).data.find((c: Currency) => c.name == t.wantBuyFor.currency);\n          if (!currencyOfCrypto) return '';\n  \n          const buyForEuro =  t.buyFor ? (t.buyFor as any).euroAmount : t.wantBuyFor.amount * currencyOfWantFor.price;\n          let delta = (t.volume as any) * currencyOfCrypto.price - buyForEuro;\n          if (currencies && (t.state.toString() === TicketStateEnum.SOLD)) {\n            delta = (t.sell as any).euroAmount - buyForEuro;\n          }\n  \n          return `${delta >= 0 ? '+' + delta.toFixed(1) : delta.toFixed(1)}`;\n        }\n  \n        return '';\n      };\n}","/home/florent/VisualStudioCode/app-niortweb/src/stores/currency.ts",[],"/home/florent/VisualStudioCode/app-niortweb/src/models/notif.ts",[],"/home/florent/VisualStudioCode/app-niortweb/src/confs/index.ts",["63"],"/home/florent/VisualStudioCode/app-niortweb/src/shared/snack-add/index.tsx",[],"/home/florent/VisualStudioCode/app-niortweb/src/shared/balance/index.tsx",["64","65"],"\nimport React, { useEffect } from 'react';\nimport { Accordion, AccordionDetails, AccordionSummary, AppBar, Avatar, Button, Chip, Dialog, DialogActions, DialogContent, DialogTitle, Typography } from '@material-ui/core';\nimport './Balance.scss';\n\nimport { Ticket } from '../../models/Ticket';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport EuroCoinIcon from '../../assets/images/euro-coin.svg';\n\ninterface CryptoBalance {\n  currency: string, amount: number\n}\n\nconst Balance = (props: any) => {\n  const [open, setOpen] = React.useState(false);\n  const [tickets, setTickets] = React.useState([]);\n  const [currencies, setCurrencies] = React.useState([]);\n  const [balances, setBalances] = React.useState<{ planned: CryptoBalance[], purchases: CryptoBalance[], sales: CryptoBalance[], inProgress: CryptoBalance[] }>({ planned: [], purchases: [], sales: [], inProgress: [] });\n\n  useEffect(() => {\n    setOpen(props.open);\n  }, [props.open]);\n\n  useEffect(() => {\n    setTickets(props.tickets);\n    console.log(props.currencies);\n    setCurrencies(props.currencies);\n\n    const newBalances = { purchases: [], sales: [], inProgress: [], planned: [] };\n    for (let i in props.tickets) {\n      const ticket: Ticket = props.tickets[i];\n      \n      if (ticket.buyFor) {\n        if (!newBalances.purchases.some((p: CryptoBalance) => p.currency === ticket.buyFor?.currency)) {\n          (newBalances.purchases as any).push({ currency: ticket.buyFor.currency, amount: 0 });\n        }\n        const purchase: any = newBalances.purchases.find((p: CryptoBalance) => p.currency === ticket.buyFor?.currency);\n        purchase.amount += ticket.buyFor.amount;\n      }\n      if (ticket.sell) {\n        if (!newBalances.sales.some((p: CryptoBalance) => p.currency === ticket.sell?.currency)) {\n          (newBalances.sales as any).push({ currency: ticket.sell.currency, amount: 0 });\n        }\n        const sale: any = newBalances.sales.find((p: CryptoBalance) => p.currency === ticket.sell?.currency);\n        sale.amount += ticket.sell.amount;\n      }\n\n      if (ticket.buyFor && !ticket.sell) {\n        if (!newBalances.inProgress.some((p: CryptoBalance) => p.currency === ticket.buyFor?.currency)) {\n          (newBalances.inProgress as any).push({ currency: ticket.buyFor.currency, amount: 0 });\n        }\n        const inP: any = newBalances.inProgress.find((p: CryptoBalance) => p.currency === ticket.buyFor?.currency);\n        inP.amount += ticket.buyFor.amount;\n      }\n\n      if (!ticket.buyFor && !ticket.sell) {\n        if (!newBalances.planned.some((p: CryptoBalance) => p.currency === ticket.wantBuyFor?.currency)) {\n          (newBalances.planned as any).push({ currency: ticket.wantBuyFor.currency, amount: 0 });\n        }\n        const p: any = newBalances.planned.find((p: CryptoBalance) => p.currency === ticket.wantBuyFor?.currency);\n        p.amount += ticket.wantBuyFor.amount;\n      }\n    }\n    console.log(newBalances)\n    setBalances(newBalances);\n  }, [props.tickets, props.currencies]);\n\n\n  const handleClose = () => {\n    setOpen(false);\n\n    if (props.onClose) props.onClose();\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onClose={handleClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">Balance</DialogTitle>\n      <DialogContent>\n        {/* Achats */}\n        {/* BTC : 123 */}\n        {/* En cours */}\n        {/* Ventes */}\n\n        <Accordion>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <Typography>Planifié ({balances.planned.length})</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n              {balances.planned.map(p => {\n                const logo = (currencies as any).data.find((c:any) => c.name === p.currency).logoUrl;\n                return (<Chip key={`p_${p.amount}`}\n                  avatar={<Avatar src={logo || EuroCoinIcon}>€</Avatar>}\n                  label={`${p.amount} ${p.currency}`}\n                />);\n              })}\n          </AccordionDetails>\n        </Accordion>\n        <Accordion>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel2a-content\"\n            id=\"panel2a-header\"\n          >\n            <Typography >En cours ({balances.inProgress.length})</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n          {balances.inProgress.map(p => {\n                const logo = (currencies as any).data.find((c:any) => c.name === p.currency).logoUrl;\n                return (<Chip key={`p_${p.amount}`}\n                  avatar={<Avatar src={logo || EuroCoinIcon}>€</Avatar>}\n                  label={`${p.amount} ${p.currency}`}\n                />);\n              })}\n          </AccordionDetails>\n        </Accordion>\n        <Accordion>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel2a-content\"\n            id=\"panel2a-header\"\n          >\n            <Typography >Achats ({balances.purchases.length})</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n          {balances.purchases.map(p => {\n                const logo = (currencies as any).data.find((c:any) => c.name === p.currency).logoUrl;\n                return (<Chip key={`p_${p.amount}`}\n                  avatar={<Avatar src={logo || EuroCoinIcon}>€</Avatar>}\n                  label={`${p.amount} ${p.currency}`}\n                />);\n              })}\n          </AccordionDetails>\n        </Accordion>\n        <Accordion>\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel2a-content\"\n            id=\"panel2a-header\"\n          >\n            <Typography >Ventes ({balances.sales.length})</Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n          {balances.sales.map(p => {\n                const logo = (currencies as any).data.find((c:any) => c.name === p.currency).logoUrl;\n                return (<Chip key={`p_${p.amount}`}\n                  avatar={<Avatar src={logo || EuroCoinIcon}>€</Avatar>}\n                  label={`${p.amount} ${p.currency}`}\n                />);\n              })}\n          </AccordionDetails>\n        </Accordion>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Fermer\n          </Button>\n\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport default Balance;","/home/florent/VisualStudioCode/app-niortweb/src/services/pwa.service.ts",[],"/home/florent/VisualStudioCode/app-niortweb/src/views/login/index.tsx",["66","67"],"/home/florent/VisualStudioCode/app-niortweb/src/stores/notif.ts",[],"/home/florent/VisualStudioCode/app-niortweb/src/services/http-client.service.ts",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":9,"column":106,"nodeType":"74","messageId":"75","endLine":9,"endColumn":112},{"ruleId":"72","severity":1,"message":"76","line":9,"column":125,"nodeType":"74","messageId":"75","endLine":9,"endColumn":135},{"ruleId":"77","severity":1,"message":"78","line":9,"column":90,"nodeType":"79","messageId":"80","endLine":9,"endColumn":92},{"ruleId":"77","severity":1,"message":"78","line":10,"column":91,"nodeType":"79","messageId":"80","endLine":10,"endColumn":93},{"ruleId":"81","severity":1,"message":"82","line":68,"column":3,"nodeType":"83","endLine":68,"endColumn":31},{"ruleId":"72","severity":1,"message":"84","line":3,"column":57,"nodeType":"74","messageId":"75","endLine":3,"endColumn":63},{"ruleId":"72","severity":1,"message":"85","line":16,"column":10,"nodeType":"74","messageId":"75","endLine":16,"endColumn":17},{"ruleId":"86","severity":1,"message":"87","line":57,"column":125,"nodeType":"88","messageId":"89","endLine":57,"endColumn":181,"fix":"90"},{"ruleId":"72","severity":1,"message":"91","line":86,"column":19,"nodeType":"74","messageId":"75","endLine":86,"endColumn":23},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"@typescript-eslint/no-unused-vars","'Slider' is defined but never used.","Identifier","unusedVar","'Typography' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'AppBar' is defined but never used.","'tickets' is assigned a value but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"94","text":"95"},"'user' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[2040,2040],"()"]